Microchip MPLAB XC8 Compiler V1.30 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.30\dat\en_msgs.txt -cs \
  -h+dist/default/production\lcd.X.production.sym \
  --cmf=dist/default/production\lcd.X.production.cmf -z -Q16F877A \
<<<<<<< HEAD
  -oC:\Users\Hendrix\AppData\Local\Temp\s8t8.6 \
=======
  -oC:\Users\ricardo\AppData\Local\Temp\s6c0.6 \
>>>>>>> origin/master
  -Mdist/default/production/lcd.X.production.map -E1 -ver=XC8 \
  -ASTACK=0110h-016fh -pstack=STACK -ACONST=00h-0FFhx32 -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -AENTRY=00h-0FFhx32 -ASTRING=00h-0FFhx32 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
<<<<<<< HEAD
  -DENTRY=2 -k C:\Users\Hendrix\AppData\Local\Temp\s8t8.obj \
=======
  -DENTRY=2 -k C:\Users\ricardo\AppData\Local\Temp\s6c0.obj \
>>>>>>> origin/master
  dist/default/production\lcd.X.production.obj 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
<<<<<<< HEAD
C:\Users\Hendrix\AppData\Local\Temp\s8t8.obj
=======
C:\Users\ricardo\AppData\Local\Temp\s6c0.obj
>>>>>>> origin/master
                end_init                              0        0        3        0       0
                config                             2007     2007        1     400E       0
dist/default/production\lcd.X.production.obj
                cinit                               7F8      7F8        8      FF0       0
<<<<<<< HEAD
                text13                              37A      37A       1A      6F4       0
                text12                              394      394       1A      728       0
                text11                              481      481       5B      902       0
                text10                              3FA      3FA       39      7F4       0
                text9                               4DC      4DC       5B      9B8       0
                text8                               3AE      3AE       23      75C       0
                text7                               537      537       68      A6E       0
                text6                               3D1      3D1       29      7A2       0
                text5                               6F1      6F1      107      DE2       0
                text4                               372      372        8      6E4       0
                text3                               59F      59F       8C      B3E       0
                text2                               433      433       4E      866       0
                text1                               36B      36B        7      6D6       0
                maintext                            62B      62B       C6      C56       0
                cstackBANK0                          20       20       1D       20       1
                cstackCOMMON                         70       70        E       70       1
                bssBANK0                             3D       3D        4       20       1
=======
                text8                               5E6      5E6       1A      BCC       0
                text7                               600      600       1A      C00       0
                text6                               5DB      5DB        B      BB6       0
                text5                               6CC      6CC       5B      D98       0
                text4                               675      675       57      CEA       0
                text3                               63C      63C       39      C78       0
                text2                               61A      61A       22      C34       0
                text1                               5D4      5D4        7      BA8       0
                maintext                            727      727       D1      E4E       0
                cstackBANK0                          20       20        7       20       1
                cstackCOMMON                         70       70        E       70       1
                bssBANK0                             27       27        4       20       1
                strings                               3        3       4B        6       0
>>>>>>> origin/master

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CONST          

        CLASS   CODE           
                end_init                              0        0        3         0
                cinit                               7F8      7F8        8         0
<<<<<<< HEAD
                text13                              37A      37A       1A         0
                text12                              394      394       1A         0
                text11                              481      481       5B         0
                text10                              3FA      3FA       39         0
                text9                               4DC      4DC       5B         0
                text8                               3AE      3AE       23         0
                text7                               537      537       68         0
                text6                               3D1      3D1       29         0
                text5                               6F1      6F1      107         0
                text4                               372      372        8         0
                text3                               59F      59F       8C         0
                text2                               433      433       4E         0
                text1                               36B      36B        7         0
                maintext                            62B      62B       C6         0
=======
                text8                               5E6      5E6       1A         0
                text7                               600      600       1A         0
                text6                               5DB      5DB        B         0
                text5                               6CC      6CC       5B         0
                text4                               675      675       57         0
                text3                               63C      63C       39         0
                text2                               61A      61A       22         0
                text1                               5D4      5D4        7         0
                maintext                            727      727       D1         0
>>>>>>> origin/master

        CLASS   STRCODE        

        CLASS   ENTRY          

        CLASS   STRING         
                strings                               3        3       4B         0

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
<<<<<<< HEAD
                cstackBANK0                          20       20       1D         1
                bssBANK0                             3D       3D        4         1
=======
                cstackBANK0                          20       20        7         1
                bssBANK0                             27       27        4         1
>>>>>>> origin/master

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
<<<<<<< HEAD
                cstackBANK0                    000020  000021  000041        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                text1                          00036B  000007  000372       6D6       0  CODE        2
                text4                          000372  000008  00037A       6E4       0  CODE        2
                text13                         00037A  00001A  000394       6F4       0  CODE        2
                text12                         000394  00001A  0003AE       728       0  CODE        2
                text8                          0003AE  000023  0003D1       75C       0  CODE        2
                text6                          0003D1  000029  0003FA       7A2       0  CODE        2
                text10                         0003FA  000039  000433       7F4       0  CODE        2
                text2                          000433  00004E  000481       866       0  CODE        2
                text11                         000481  00005B  0004DC       902       0  CODE        2
                text9                          0004DC  00005B  000537       9B8       0  CODE        2
                text7                          000537  000068  00059F       A6E       0  CODE        2
                text3                          00059F  00008C  00062B       B3E       0  CODE        2
                maintext                       00062B  0000C6  0006F1       C56       0  CODE        2
                text5                          0006F1  000107  0007F8       DE2       0  CODE        2
=======
                strings                        000003  00004B  00004E         6       0  STRING      2
                cstackBANK0                    000020  00000B  00002B        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                text1                          0005D4  000007  0005DB       BA8       0  CODE        2
                text6                          0005DB  00000B  0005E6       BB6       0  CODE        2
                text8                          0005E6  00001A  000600       BCC       0  CODE        2
                text7                          000600  00001A  00061A       C00       0  CODE        2
                text2                          00061A  000022  00063C       C34       0  CODE        2
                text3                          00063C  000039  000675       C78       0  CODE        2
                text4                          000675  000057  0006CC       CEA       0  CODE        2
                text5                          0006CC  00005B  000727       D98       0  CODE        2
                maintext                       000727  0000D1  0007F8       E4E       0  CODE        2
>>>>>>> origin/master
                cinit                          0007F8  000008  000800       FF0       0  CODE        2
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
<<<<<<< HEAD
        BANK0            0041-006F             2F           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-036A            368           2
                         0800-1FFF            800
        CONST            0003-036A            100           2
                         0800-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-036A            100           2
                         0800-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0041-006F             2F           1
=======
        BANK0            002B-006F             45           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             004E-05D3            586           2
                         0800-1FFF            800
        CONST            004E-05D3            100           2
                         0800-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            004E-05D3            100           2
                         0800-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              002B-006F             45           1
>>>>>>> origin/master
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
<<<<<<< HEAD
        STRCODE          0003-036A            368           2
                         0800-1FFF           1800
        STRING           0003-036A            100           2
=======
        STRCODE          004E-05D3            586           2
                         0800-1FFF           1800
        STRING           004E-05D3            100           2
>>>>>>> origin/master
                         0800-1FFF            100

                                  Symbol Table

<<<<<<< HEAD
?___attoft               cstackBANK0  0020
?___awdiv                cstackCOMMON 0070
?___ftadd                cstackCOMMON 0078
?___ftneg                cstackCOMMON 0070
?___ftpack               cstackCOMMON 0070
?___fttol                cstackCOMMON 0070
?___wmul                 cstackCOMMON 0070
?_modf                   cstackBANK0  0027
Lcd_Cmd@a                cstackCOMMON 0073
Lcd_Port@a               cstackCOMMON 0070
Lcd_Write_Char@a         cstackCOMMON 0074
Lcd_Write_Char@temp      cstackCOMMON 0072
Lcd_Write_Char@y         cstackCOMMON 0073
_Lcd_Cmd                 text12       0394
_Lcd_Init                text11       0481
_Lcd_Port                text13       037A
_Lcd_Write_Char          text10       03FA
_RD0                     (abs)        0040
_RD1                     (abs)        0041
_RD4                     (abs)        0044
_RD5                     (abs)        0045
_RD6                     (abs)        0046
_RD7                     (abs)        0047
_TRISAbits               (abs)        0085
_TRISD                   (abs)        0088
_TiempoPulso             bssBANK0     003D
__CFG_BOREN$ON           (abs)        0000
__CFG_CP$OFF             (abs)        0000
__CFG_CPD$OFF            (abs)        0000
__CFG_FOSC$HS            (abs)        0000
__CFG_PWRTE$OFF          (abs)        0000
__CFG_WDTE$OFF           (abs)        0000
__CFG_WRT$OFF            (abs)        0000
__Habs1                  abs1         0000
__Hbank0                 bank0        0000
__Hbank1                 bank1        0000
__Hbank2                 bank2        0000
__Hbank3                 bank3        0000
__HbssBANK0              bssBANK0     0000
__Hcinit                 cinit        0800
__Hclrtext               clrtext      0000
__Hcode                  code         0000
__Hcommon                common       0000
__Hconfig                config       2008
__HcstackBANK0           cstackBANK0  0000
__HcstackCOMMON          cstackCOMMON 0000
__Heeprom_data           eeprom_data  0000
__Hend_init              end_init     0003
__Hfunctab               functab      0000
__Hidloc                 idloc        0000
__Hinit                  init         0000
__Hintentry              intentry     0000
__Hmaintext              maintext     0000
__Hpowerup               powerup      0000
__Hram                   ram          0000
__Hreset_vec             reset_vec    0000
__Hsfr0                  sfr0         0000
__Hsfr1                  sfr1         0000
__Hsfr2                  sfr2         0000
__Hsfr3                  sfr3         0000
__Hstack                 stack        0000
__Hstrings               strings      0000
__Htext                  text         0000
__Labs1                  abs1         0000
__Lbank0                 bank0        0000
__Lbank1                 bank1        0000
__Lbank2                 bank2        0000
__Lbank3                 bank3        0000
__LbssBANK0              bssBANK0     0000
__Lcinit                 cinit        07F8
__Lclrtext               clrtext      0000
__Lcode                  code         0000
__Lcommon                common       0000
__Lconfig                config       2007
__LcstackBANK0           cstackBANK0  0000
__LcstackCOMMON          cstackCOMMON 0000
__Leeprom_data           eeprom_data  0000
__Lend_init              end_init     0000
__Lfunctab               functab      0000
__Lidloc                 idloc        0000
__Linit                  init         0000
__Lintentry              intentry     0000
__Lmaintext              maintext     0000
__Lpowerup               powerup      0000
__Lram                   ram          0000
__Lreset_vec             reset_vec    0000
__Lsfr0                  sfr0         0000
__Lsfr1                  sfr1         0000
__Lsfr2                  sfr2         0000
__Lsfr3                  sfr3         0000
__Lstack                 stack        0000
__Lstrings               strings      0000
__Ltext                  text         0000
__S0                     (abs)        2008
__S1                     (abs)        007E
__S2                     (abs)        0000
__S3                     (abs)        0000
___attoft                text6        03D1
___attoft@c              cstackBANK0  0020
___attoft@sign           cstackBANK0  0025
___awdiv                 text9        04DC
___awdiv@counter         cstackCOMMON 0075
___awdiv@dividend        cstackCOMMON 0072
___awdiv@divisor         cstackCOMMON 0070
___awdiv@quotient        cstackCOMMON 0077
___awdiv@sign            cstackCOMMON 0076
___ftadd                 text5        06F1
___ftadd@exp1            cstackBANK0  0026
___ftadd@exp2            cstackBANK0  0025
___ftadd@f1              cstackCOMMON 0078
___ftadd@f2              cstackCOMMON 007B
___ftadd@sign            cstackBANK0  0024
___ftneg                 text4        0372
___ftneg@f1              cstackCOMMON 0070
___ftpack                text7        0537
___ftpack@arg            cstackCOMMON 0070
___ftpack@exp            cstackCOMMON 0073
___ftpack@sign           cstackCOMMON 0074
___fttol                 text3        059F
___fttol@exp1            cstackCOMMON 007D
___fttol@f1              cstackCOMMON 0070
___fttol@lval            cstackCOMMON 0079
___fttol@sign1           cstackCOMMON 0078
___int_sp                stack        0000
___latbits               (abs)        0002
___sp                    stack        0000
___wmul                  text8        03AE
___wmul@multiplicand     cstackCOMMON 0072
___wmul@multiplier       cstackCOMMON 0070
___wmul@product          cstackCOMMON 0074
__end_of_Lcd_Cmd         text12       03AE
__end_of_Lcd_Init        text11       04DC
__end_of_Lcd_Port        text13       0394
__end_of_Lcd_Write_Char  text10       0433
__end_of___attoft        text6        03FA
__end_of___awdiv         text9        0537
__end_of___ftadd         text5        07F8
__end_of___ftneg         text4        037A
__end_of___ftpack        text7        059F
__end_of___fttol         text3        062B
__end_of___wmul          text8        03D1
__end_of__initialization cinit        07FC
__end_of_main            maintext     06F1
__end_of_modf            text2        0481
__end_of_pic_init        text1        0372
__initialization         cinit        07F8
__pbssBANK0              bssBANK0     003D
__pcstackBANK0           cstackBANK0  0020
__pcstackCOMMON          cstackCOMMON 0070
__pmaintext              maintext     062B
__ptext0                 text0        0000
__ptext1                 text1        036B
__ptext10                text10       03FA
__ptext11                text11       0481
__ptext12                text12       0394
__ptext13                text13       037A
__ptext2                 text2        0433
__ptext3                 text3        059F
__ptext4                 text4        0372
__ptext5                 text5        06F1
__ptext6                 text6        03D1
__ptext7                 text7        0537
__ptext8                 text8        03AE
__ptext9                 text9        04DC
__size_of_Lcd_Cmd        (abs)        0000
__size_of_Lcd_Init       (abs)        0000
__size_of_Lcd_Port       (abs)        0000
__size_of_Lcd_Write_Char (abs)        0000
__size_of___attoft       (abs)        0000
__size_of___awdiv        (abs)        0000
__size_of___ftadd        (abs)        0000
__size_of___ftneg        (abs)        0000
__size_of___ftpack       (abs)        0000
__size_of___fttol        (abs)        0000
__size_of___wmul         (abs)        0000
__size_of_main           (abs)        0000
__size_of_modf           (abs)        0000
__size_of_pic_init       (abs)        0000
_estado                  bssBANK0     003F
_main                    maintext     062B
_main$517                cstackBANK0  0034
_modf                    text2        0433
_pic_init                text1        036B
btemp                    (abs)        007E
end_of_initialization    cinit        07FC
intlevel0                functab      0000
intlevel1                functab      0000
intlevel2                functab      0000
intlevel3                functab      0000
intlevel4                functab      0000
intlevel5                functab      0000
ltemp                    (abs)        007E
ltemp0                   (abs)        007E
ltemp1                   (abs)        0082
ltemp2                   (abs)        0086
ltemp3                   (abs)        0080
main@base                cstackBANK0  0037
main@decimal             cstackBANK0  002F
main@entero              cstackBANK0  0039
main@entero_decena       cstackBANK0  002D
main@recibido            cstackBANK0  0031
main@x                   cstackBANK0  003B
modf@iptr                cstackBANK0  002A
modf@value               cstackBANK0  0027
reset_vec                reset_vec    0000
stackhi                  (abs)        0000
stacklo                  (abs)        0000
start                    init         0000
start_initialization     cinit        07F8
ttemp                    (abs)        007E
ttemp0                   (abs)        007E
ttemp1                   (abs)        0081
ttemp2                   (abs)        0084
ttemp3                   (abs)        0087
ttemp4                   (abs)        007F
wtemp                    (abs)        007E
wtemp0                   (abs)        007E
wtemp1                   (abs)        0080
wtemp2                   (abs)        0082
wtemp3                   (abs)        0084
wtemp4                   (abs)        0086
wtemp5                   (abs)        0088
wtemp6                   (abs)        007F
=======
Lcd_Cmd@a                  cstackCOMMON 0073
Lcd_Port@a                 cstackCOMMON 0070
Lcd_Set_Cursor@a           cstackCOMMON 0077
Lcd_Set_Cursor@b           cstackCOMMON 0074
Lcd_Set_Cursor@temp        cstackCOMMON 007C
Lcd_Set_Cursor@y           cstackCOMMON 007A
Lcd_Set_Cursor@z           cstackCOMMON 0078
Lcd_Write_Char@a           cstackCOMMON 0074
Lcd_Write_Char@temp        cstackCOMMON 0072
Lcd_Write_Char@y           cstackCOMMON 0073
Lcd_Write_String@a         cstackCOMMON 0077
Lcd_Write_String@i         cstackCOMMON 0075
_Lcd_Clear                 text6        05DB
_Lcd_Cmd                   text7        0600
_Lcd_Init                  text5        06CC
_Lcd_Port                  text8        05E6
_Lcd_Set_Cursor            text4        0675
_Lcd_Write_Char            text3        063C
_Lcd_Write_String          text2        061A
_RD0                       (abs)        0040
_RD1                       (abs)        0041
_RD4                       (abs)        0044
_RD5                       (abs)        0045
_RD6                       (abs)        0046
_RD7                       (abs)        0047
_TRISAbits                 (abs)        0085
_TRISD                     (abs)        0088
_TiempoPulso               bssBANK0     0027
__CFG_BOREN$ON             (abs)        0000
__CFG_CP$OFF               (abs)        0000
__CFG_CPD$OFF              (abs)        0000
__CFG_FOSC$HS              (abs)        0000
__CFG_PWRTE$OFF            (abs)        0000
__CFG_WDTE$OFF             (abs)        0000
__CFG_WRT$OFF              (abs)        0000
__Habs1                    abs1         0000
__Hbank0                   bank0        0000
__Hbank1                   bank1        0000
__Hbank2                   bank2        0000
__Hbank3                   bank3        0000
__HbssBANK0                bssBANK0     0000
__Hcinit                   cinit        0800
__Hclrtext                 clrtext      0000
__Hcode                    code         0000
__Hcommon                  common       0000
__Hconfig                  config       2008
__HcstackBANK0             cstackBANK0  0000
__HcstackCOMMON            cstackCOMMON 0000
__Heeprom_data             eeprom_data  0000
__Hend_init                end_init     0003
__Hfunctab                 functab      0000
__Hidloc                   idloc        0000
__Hinit                    init         0000
__Hintentry                intentry     0000
__Hmaintext                maintext     0000
__Hpowerup                 powerup      0000
__Hram                     ram          0000
__Hreset_vec               reset_vec    0000
__Hsfr0                    sfr0         0000
__Hsfr1                    sfr1         0000
__Hsfr2                    sfr2         0000
__Hsfr3                    sfr3         0000
__Hspace_0                 (abs)        2008
__Hspace_1                 (abs)        007E
__Hspace_2                 (abs)        0000
__Hspace_3                 (abs)        0000
__Hstack                   stack        0000
__Hstrings                 strings      0000
__Htext                    text         0000
__Labs1                    abs1         0000
__Lbank0                   bank0        0000
__Lbank1                   bank1        0000
__Lbank2                   bank2        0000
__Lbank3                   bank3        0000
__LbssBANK0                bssBANK0     0000
__Lcinit                   cinit        07F8
__Lclrtext                 clrtext      0000
__Lcode                    code         0000
__Lcommon                  common       0000
__Lconfig                  config       2007
__LcstackBANK0             cstackBANK0  0000
__LcstackCOMMON            cstackCOMMON 0000
__Leeprom_data             eeprom_data  0000
__Lend_init                end_init     0000
__Lfunctab                 functab      0000
__Lidloc                   idloc        0000
__Linit                    init         0000
__Lintentry                intentry     0000
__Lmaintext                maintext     0000
__Lpowerup                 powerup      0000
__Lram                     ram          0000
__Lreset_vec               reset_vec    0000
__Lsfr0                    sfr0         0000
__Lsfr1                    sfr1         0000
__Lsfr2                    sfr2         0000
__Lsfr3                    sfr3         0000
__Lspace_0                 (abs)        0000
__Lspace_1                 (abs)        0000
__Lspace_2                 (abs)        0000
__Lspace_3                 (abs)        0000
__Lstack                   stack        0000
__Lstrings                 strings      0000
__Ltext                    text         0000
__S0                       (abs)        2008
__S1                       (abs)        007E
__S2                       (abs)        0000
__S3                       (abs)        0000
___int_sp                  stack        0000
___latbits                 (abs)        0002
___sp                      stack        0000
__end_of_Lcd_Clear         text6        05E6
__end_of_Lcd_Cmd           text7        061A
__end_of_Lcd_Init          text5        0727
__end_of_Lcd_Port          text8        0600
__end_of_Lcd_Set_Cursor    text4        06CC
__end_of_Lcd_Write_Char    text3        0675
__end_of_Lcd_Write_String  text2        063C
__end_of__initialization   cinit        07FC
__end_of__stringdata       strings      004E
__end_of__stringtab        strings      0009
__end_of_main              maintext     07F8
__end_of_pic_init          text1        05DB
__initialization           cinit        07F8
__pbssBANK0                bssBANK0     0027
__pcstackBANK0             cstackBANK0  0020
__pcstackCOMMON            cstackCOMMON 0070
__pmaintext                maintext     0727
__pstrings                 strings      0003
__ptext1                   text1        05D4
__ptext2                   text2        061A
__ptext3                   text3        063C
__ptext4                   text4        0675
__ptext5                   text5        06CC
__ptext6                   text6        05DB
__ptext7                   text7        0600
__ptext8                   text8        05E6
__size_of_Lcd_Clear        (abs)        0000
__size_of_Lcd_Cmd          (abs)        0000
__size_of_Lcd_Init         (abs)        0000
__size_of_Lcd_Port         (abs)        0000
__size_of_Lcd_Set_Cursor   (abs)        0000
__size_of_Lcd_Write_Char   (abs)        0000
__size_of_Lcd_Write_String (abs)        0000
__size_of_main             (abs)        0000
__size_of_pic_init         (abs)        0000
__stringbase               strings      0008
__stringdata               strings      0009
__stringtab                strings      0003
_estado                    bssBANK0     0029
_main                      maintext     0727
_pic_init                  text1        05D4
btemp                      (abs)        007E
end_of_initialization      cinit        07FC
intlevel0                  functab      0000
intlevel1                  functab      0000
intlevel2                  functab      0000
intlevel3                  functab      0000
intlevel4                  functab      0000
intlevel5                  functab      0000
ltemp                      (abs)        007E
ltemp0                     (abs)        007E
ltemp1                     (abs)        0082
ltemp2                     (abs)        0086
ltemp3                     (abs)        0080
main@NuevaVar              cstackBANK0  0023
main@numero                cstackBANK0  0025
reset_vec                  reset_vec    0000
stackhi                    (abs)        0000
stacklo                    (abs)        0000
start                      init         0000
start_initialization       cinit        07F8
ttemp                      (abs)        007E
ttemp0                     (abs)        007E
ttemp1                     (abs)        0081
ttemp2                     (abs)        0084
ttemp3                     (abs)        0087
ttemp4                     (abs)        007F
wtemp                      (abs)        007E
wtemp0                     (abs)        007E
wtemp1                     (abs)        0080
wtemp2                     (abs)        0082
wtemp3                     (abs)        0084
wtemp4                     (abs)        0086
wtemp5                     (abs)        0088
wtemp6                     (abs)        007F
>>>>>>> origin/master


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 24 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
<<<<<<< HEAD
  x               2   27[BANK0 ] int 
  recibido        3   17[BANK0 ] float 
  entero          2   25[BANK0 ] int 
  base            2   23[BANK0 ] int 
  decimal         2   15[BANK0 ] int 
  entero_decen    2   13[BANK0 ] int 
  decimal2        2    0        int 
  decimal1        2    0        int 
  entero_unida    2    0        int 
=======
  NuevaVar        2    3[BANK0 ] int 
  numero          2    5[BANK0 ] int 
>>>>>>> origin/master
  a               2    0        unsigned int 
 Return value:  Size  Location     Type
                  2   70[COMMON] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
<<<<<<< HEAD
      Locals:         0      16       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0      18       0       0       0
Total ram usage:       18 bytes
=======
      Locals:         0       4       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       7       0       0       0
Total ram usage:        7 bytes
>>>>>>> origin/master
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Clear
		_Lcd_Init
<<<<<<< HEAD
		_Lcd_Write_Char
		___awdiv
		___fttol
		___wmul
		_modf
=======
		_Lcd_Set_Cursor
		_Lcd_Write_Char
		_Lcd_Write_String
>>>>>>> origin/master
		_pic_init
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _pic_init *****************
 Defined at:
		line 10 in file "lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


<<<<<<< HEAD
 *************** function _modf *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\modf.c"
 Parameters:    Size  Location     Type
  value           3    7[BANK0 ] int 
  iptr            1   10[BANK0 ] PTR 
		 -> main@entero(2), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    7[BANK0 ] PTR 
=======
 *************** function _Lcd_Write_String *****************
 Defined at:
		line 116 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     PTR unsigned char 
		 -> STR_5(9), STR_4(10), STR_3(17), STR_2(15), 
		 -> STR_1(18), 
 Auto vars:     Size  Location     Type
  a               1    7[COMMON] PTR unsigned char 
		 -> STR_5(9), STR_4(10), STR_3(17), STR_2(15), 
		 -> STR_1(18), 
  i               2    5[COMMON] int 
 Return value:  Size  Location     Type
		None               void
>>>>>>> origin/master
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
<<<<<<< HEAD
      Params:         0       4       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___attoft
		___ftadd
		___ftneg
		___fttol
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___fttol *****************
 Defined at:
		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\fttol.c"
 Parameters:    Size  Location     Type
  f1              3    0[COMMON] float 
 Auto vars:     Size  Location     Type
  lval            4    9[COMMON] unsigned long 
  exp1            1   13[COMMON] unsigned char 
  sign1           1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  4    0[COMMON] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         6       0       0       0       0
      Temps:          4       0       0       0       0
      Totals:        14       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_modf
 This function uses a non-reentrant model


 *************** function ___ftneg *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftneg.c"
 Parameters:    Size  Location     Type
  f1              3    0[COMMON] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMMON] float 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         3       0       0       0       0
      Locals:         0       0       0       0       0
=======
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
>>>>>>> origin/master
      Temps:          0       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
<<<<<<< HEAD
 This function calls:
		Nothing
 This function is called by:
		_modf
 This function uses a non-reentrant model


 *************** function ___ftadd *****************
 Defined at:
		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftadd.c"
 Parameters:    Size  Location     Type
  f1              3    8[COMMON] float 
  f2              3   11[COMMON] float 
 Auto vars:     Size  Location     Type
  exp1            1    6[BANK0 ] unsigned char 
  exp2            1    5[BANK0 ] unsigned char 
  sign            1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3    8[COMMON] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         6       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       4       0       0       0
      Totals:         6       7       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_modf
 This function uses a non-reentrant model


 *************** function ___attoft *****************
 Defined at:
		line 37 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\attoft.c"
 Parameters:    Size  Location     Type
  c               3    0[BANK0 ] m
 Auto vars:     Size  Location     Type
  sign            1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3    0[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_modf
 This function uses a non-reentrant model


 *************** function ___ftpack *****************
 Defined at:
		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\float.c"
 Parameters:    Size  Location     Type
  arg             3    0[COMMON] unsigned um
  exp             1    3[COMMON] unsigned char 
  sign            1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMMON] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         5       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         8       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		___attoft
		___ftadd
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\wmul.c"
 Parameters:    Size  Location     Type
  multiplier      2    0[COMMON] unsigned int 
  multiplicand    2    2[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    4[COMMON] unsigned int 
 Return value:  Size  Location     Type
                  2    0[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
=======
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Write_Char
>>>>>>> origin/master
 This function is called by:
		_main
 This function uses a non-reentrant model


<<<<<<< HEAD
 *************** function ___awdiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    0[COMMON] int 
  dividend        2    2[COMMON] int 
 Auto vars:     Size  Location     Type
  quotient        2    7[COMMON] int 
  sign            1    6[COMMON] unsigned char 
  counter         1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMMON] int 
 Registers used:
		wreg, status,2, status,0
=======
 *************** function _Lcd_Write_Char *****************
 Defined at:
		line 99 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    4[COMMON] unsigned char 
  y               1    3[COMMON] unsigned char 
  temp            1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
>>>>>>> origin/master
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
<<<<<<< HEAD
      Params:         4       0       0       0       0
      Locals:         4       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         9       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
=======
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Write_String
>>>>>>> origin/master
		_main
 This function uses a non-reentrant model


<<<<<<< HEAD
 *************** function _Lcd_Write_Char *****************
 Defined at:
		line 99 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    4[COMMON] unsigned char 
  y               1    3[COMMON] unsigned char 
  temp            1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
=======
 *************** function _Lcd_Set_Cursor *****************
 Defined at:
		line 58 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  b               1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  a               1    7[COMMON] unsigned char 
  temp            2   12[COMMON] int 
  y               2   10[COMMON] int 
  z               2    8[COMMON] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
>>>>>>> origin/master
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
<<<<<<< HEAD
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd_Port
 This function is called by:
		_main
		_Lcd_Write_String
=======
      Params:         1       0       0       0       0
      Locals:         7       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:        10       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
>>>>>>> origin/master
 This function uses a non-reentrant model


 *************** function _Lcd_Init *****************
 Defined at:
		line 79 in file "lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Cmd
		_Lcd_Port
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Clear *****************
 Defined at:
		line 52 in file "lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   37[COMMON] int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Cmd *****************
 Defined at:
		line 43 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Clear
		_Lcd_Set_Cursor
		_Lcd_Init
		_Lcd_Shift_Right
		_Lcd_Shift_Left
 This function uses a non-reentrant model


 *************** function _Lcd_Port *****************
 Defined at:
		line 21 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Cmd
		_Lcd_Init
		_Lcd_Write_Char
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftadd.c
		___ftadd       		CODE           	06F1	0000	263

C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftadd.c estimated size: 263

lcd.h
		_pic_init      		CODE           	036B	0000	7
		_Lcd_Init      		CODE           	0481	0000	91
		_Lcd_Write_Char		CODE           	03FA	0000	57
		_Lcd_Cmd       		CODE           	0394	0000	26
		_Lcd_Port      		CODE           	037A	0000	26

lcd.h estimated size: 207

C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\float.c
		___ftpack      		CODE           	0537	0000	104

C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\float.c estimated size: 104

C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\modf.c
		_modf          		CODE           	0433	0000	78

C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\modf.c estimated size: 78

C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\wmul.c
		___wmul        		CODE           	03AE	0000	35

C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\wmul.c estimated size: 35

shared
		__stringtab    		STRING         	0003	0000	6
		__stringdata   		STRING         	0009	0000	69
		__initializatio		CODE           	07F8	0000	4

shared estimated size: 79

<<<<<<< HEAD
main.c
		_main          		CODE           	062B	0000	198

main.c estimated size: 198

C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftneg.c
		___ftneg       		CODE           	0372	0000	8

C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftneg.c estimated size: 8

C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\fttol.c
		___fttol       		CODE           	059F	0000	140

C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\fttol.c estimated size: 140

C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\attoft.c
		___attoft      		CODE           	03D1	0000	41

C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\attoft.c estimated size: 41

C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awdiv.c
		___awdiv       		CODE           	04DC	0000	91

C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awdiv.c estimated size: 91
=======
lcd.h
		_Lcd_Write_Stri		CODE           	061A	0000	34
		_pic_init      		CODE           	05D4	0000	7
		_Lcd_Init      		CODE           	06CC	0000	91
		_Lcd_Write_Char		CODE           	063C	0000	57
		_Lcd_Cmd       		CODE           	0600	0000	26
		_Lcd_Set_Cursor		CODE           	0675	0000	87
		_Lcd_Clear     		CODE           	05DB	0000	11
		_Lcd_Port      		CODE           	05E6	0000	26

lcd.h estimated size: 339

main.c
		_main          		CODE           	0727	0000	209

main.c estimated size: 209
>>>>>>> origin/master

